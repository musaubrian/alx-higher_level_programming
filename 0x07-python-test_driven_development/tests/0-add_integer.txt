This is the ``0-add_integer`` module
====================================

it returns the sum of two digits passed as arguments

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 10)
11

when either value is not an integer::
=====================================

>>> add_integer(1, "string")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ernest/unit-test/0-add_integer.py", line 20, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer("string", 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ernest/unit-test/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(None, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ernest/unit-test/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

when one argument is passed::
=============================
>>> add_integer(2)
100

b passes its default argument which is 98
